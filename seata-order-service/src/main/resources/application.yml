server:
  port: 8180
spring:
  application:
    name: seata-order-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    password: 123456
    url: jdbc:mysql://localhost:3306/seata-order
    username: root
feign:
  hystrix:
    enabled: false
logging:
  level:
    io:
      seata: info
mybatis:
  mapperLocations: classpath:mapper/*.xml


seata:
  # 开启自动装配
  enabled: true
  # 本客户端的微服务名称
  application-id: seata-order-service
  # 读取哪个事务分组
  # 例如此时会读取 SEATA_GROUP 这个分组下的 service.vgroupMapping.my_test_tx_group 这个属性的值。从上面的配置可以知道笔者此处的最终值为 testCluster。后面程序运行会找到 testCluster 这个集群的seata服务端，进行通讯。
  tx-service-group: fsp_tx_group
  enable-auto-data-source-proxy: false
  # 配置中心设置
  config:
    type: nacos
    nacos:
      username: nacos
      password: nacos
      server-addr: localhost:8848
      # 读取的配置分组
      group: SEATA_GROUP
      namespace: 2a806a7d-566a-4f9d-be5a-03fe7c770565
  # 注册中心设置
  registry:
    type: nacos
    nacos:
      # SEATA服务中心的微服务名，此处与服务端保持一致
      application: seata-server
      server-addr: localhost:8848
      username: nacos
      password: nacos